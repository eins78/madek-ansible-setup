Setting up Madek with Ansible
=============================

Step by step procedure
----------------------

### Create your hosts configugration file

The easiest way is to copy the provided `hosts_example` file:

    cp hosts_example hosts

Adjust the value of the ansible_ssh_host variable therein with the ip
of your madek server. If the ip is 10.0.0.1 the line should read: 

    madek-host ansible_ssh_host=10.0.0.1 ansible_ssh_user=root


### Install or Upgrade Madek

    ansible-playbook  -i hosts play_setup-and-deploy.yml

### Create a Admin User and set the Password 

    ansible-playbook -i hosts play_create-admin.yml -e 'admin_password=YOUR-SECRETE-PASSWORD'



Customization and Advanced Topics 
---------------------------------

### Configure the Color Scheme

Madek comes with 4 predefined color schemes: green, red, blue and mono. The
color scheme can be configured by setting the `color_scheme` variable. 
You can also set a `custom_color` variable to a valid CSS color, which will 
override the main color *on top of* the chosen scheme.

This is most conveniently performed in the variables file for your specific host. 
See `host_vars/test-vm` for example.


### Configure Zencoder

Set the `zencoder_enabled` variable in your host file to `True`, and
the `zencoder_test_mode` to your desired value (probably `False`).

    zencoder_enabled: True
    zencoder_test_mode: False

Keep these parameters in the hosts file. Run the setup-and-deploy play
with an additional parameter specifying your zencoder api-key:

    ansible-playbook  -i hosts play_setup-and-deploy.yml -e 'zencoder_api_key=YOUR-ZENCODER-API-KEY'

Note: The *setup-and-deploy* playbook will remember the
`zencoder_api_key`. There is no need to specify it again when the
setup-and-deploy playbook will be run in the future, to upgrade your
madek installation e.g.


### Configure Newrelic Application Monitoring 

Perform the following once: 

    ansible-playbook  -i hosts play_setup-and-deploy.yml -e 'newrelic_key=YOUR-NEWRELIC-KEY'


